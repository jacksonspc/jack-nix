# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, pkgs, ... }:

let jack-info = import ./jack-info.nix {inherit pkgs; } ; in
{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
      ./home.nix

    ];
  # Use the GRUB 2 boot loader.
  boot.loader.grub.enable = true;
  # boot.loader.grub.efiSupport = true;
  # boot.loader.grub.efiInstallAsRemovable = true;
  # boot.loader.efi.efiSysMountPoint = "/boot/efi";
  # Define on which hard drive you want to install Grub.
  boot.loader.grub.device = "/dev/vda"; # or "nodev" for efi only

  # networking.hostName = "nixos"; # Define your hostname.
  # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.

  # Set your time zone.
  time.timeZone = "America/Toronto";

  # The global useDHCP flag is deprecated, therefore explicitly set to false here.
  # Per-interface useDHCP will be mandatory in the future, so this generated config
  # replicates the default behaviour.
  networking.useDHCP = false;
  networking.networkmanager.enable = true;

  # Configure network proxy if necessary
  # networking.proxy.default = "http://user:password@proxy:port/";
  # networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";

  # Select internationalisation properties.
  # i18n.defaultLocale = "en_US.UTF-8";
  # console = {
  #   font = "Lat2-Terminus16";
  #   keyMap = "us";
  # };

  # Enable the X11 windowing system.
  services.xserver.enable = true;


  # Enable i3.
environment.etc."i3-config" = { text = ''
  	# This file has been auto-generated by i3-config-wizard(1).
	# It will not be overwritten, so edit it as you like.
	#
	# Should you change your keyboard layout some time, delete
	# this file and re-run i3-config-wizard(1).
	#

	# i3 config file (v4)
	#
	# Please see https://i3wm.org/docs/userguide.html for a complete reference!

	set $mod Mod4

	# Font for window titles. Will also be used by the bar unless a different font
	# is used in the bar {} block below.
	font pango:monospace 8

	# This font is widely installed, provides lots of unicode glyphs, right-to-left
	# text rendering and scalability on retina/hidpi displays (thanks to pango).
	#font pango:DejaVu Sans Mono 8

	# Start XDG autostart .desktop files using dex. See also
	# https://wiki.archlinux.org/index.php/XDG_Autostart
	exec --no-startup-id dex --autostart --environment i3

	# The combination of xss-lock, nm-applet and pactl is a popular choice, so
	# they are included here as an example. Modify as you see fit.

	# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
	# screen before suspend. Use loginctl lock-session to lock your screen.
	exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

	# NetworkManager is the most popular way to manage wireless networks on Linux,
	# and nm-applet is a desktop environment-independent system tray GUI for it.
	exec --no-startup-id nm-applet

	# Use pactl to adjust volume in PulseAudio.
	set $refresh_i3status killall -SIGUSR1 i3status
	bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
	bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
	bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
	bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

	# Use Mouse+$mod to drag floating windows to their wanted position
	floating_modifier $mod

	# start a terminal
	bindsym $mod+Return exec alacritty

	# kill focused window
	bindsym $mod+w kill

	# start dmenu (a program launcher)
	bindsym $mod+d exec --no-startup-id dmenu_run
	# A more modern dmenu replacement is rofi:
	# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
	# There also is i3-dmenu-desktop which only displays applications shipping a
	# .desktop file. It is a wrapper around dmenu, so you need that installed.
	# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

	# change focus
	bindsym $mod+j focus left
	bindsym $mod+k focus down
	bindsym $mod+l focus up
	bindsym $mod+semicolon focus right

	# alternatively, you can use the cursor keys:
	bindsym $mod+Left focus left
	bindsym $mod+Down focus down
	bindsym $mod+Up focus up
	bindsym $mod+Right focus right

	# move focused window
	bindsym $mod+Shift+j move left
	bindsym $mod+Shift+k move down
	bindsym $mod+Shift+l move up
	bindsym $mod+Shift+semicolon move right

	# alternatively, you can use the cursor keys:
	bindsym $mod+Shift+Left move left
	bindsym $mod+Shift+Down move down
	bindsym $mod+Shift+Up move up
	bindsym $mod+Shift+Right move right

	# split in horizontal orientation
	bindsym $mod+h split h

	# split in vertical orientation
	bindsym $mod+v split v

	# enter fullscreen mode for the focused container
	bindsym $mod+f fullscreen toggle

	# change container layout (stacked, tabbed, toggle split)
	bindsym $mod+s layout stacking
	bindsym $mod+t layout tabbed
	bindsym $mod+e layout toggle split

	# toggle tiling / floating
	bindsym $mod+Shift+space floating toggle

	# change focus between tiling / floating windows
	bindsym $mod+space focus mode_toggle

	# focus the parent container
	bindsym $mod+a focus parent

	# focus the child container
	#bindsym $mod+d focus child

	# Define names for default workspaces for which we configure key bindings later on.
	# We use variables to avoid repeating the names in multiple places.
	set $ws1 "1"
	set $ws2 "2"
	set $ws3 "3"
	set $ws4 "4"
	set $ws5 "5"
	set $ws6 "6"
	set $ws7 "7"
	set $ws8 "8"
	set $ws9 "9"
	set $ws10 "10"

	# switch to workspace
	bindsym $mod+1 workspace number $ws1
	bindsym $mod+2 workspace number $ws2
	bindsym $mod+3 workspace number $ws3
	bindsym $mod+4 workspace number $ws4
	bindsym $mod+5 workspace number $ws5
	bindsym $mod+6 workspace number $ws6
	bindsym $mod+7 workspace number $ws7
	bindsym $mod+8 workspace number $ws8
	bindsym $mod+9 workspace number $ws9
	bindsym $mod+0 workspace number $ws10

	# move focused container to workspace
	bindsym $mod+Shift+1 move container to workspace number $ws1
	bindsym $mod+Shift+2 move container to workspace number $ws2
	bindsym $mod+Shift+3 move container to workspace number $ws3
	bindsym $mod+Shift+4 move container to workspace number $ws4
	bindsym $mod+Shift+5 move container to workspace number $ws5
	bindsym $mod+Shift+6 move container to workspace number $ws6
	bindsym $mod+Shift+7 move container to workspace number $ws7
	bindsym $mod+Shift+8 move container to workspace number $ws8
	bindsym $mod+Shift+9 move container to workspace number $ws9
	bindsym $mod+Shift+0 move container to workspace number $ws10

	# reload the configuration file
	bindsym $mod+Shift+c reload
	# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
	bindsym $mod+Shift+r restart
	# exit i3 (logs you out of your X session)
	bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

	# resize window (you can also use the mouse for that)
	mode "resize" {
		# These bindings trigger as soon as you enter the resize mode

		# Pressing left will shrink the window’s width.
		# Pressing right will grow the window’s width.
		# Pressing up will shrink the window’s height.
		# Pressing down will grow the window’s height.
		bindsym j resize shrink width 10 px or 10 ppt
		bindsym k resize grow height 10 px or 10 ppt
		bindsym l resize shrink height 10 px or 10 ppt
		bindsym semicolon resize grow width 10 px or 10 ppt

		# same bindings, but for the arrow keys
		bindsym Left resize shrink width 10 px or 10 ppt
		bindsym Down resize grow height 10 px or 10 ppt
		bindsym Up resize shrink height 10 px or 10 ppt
		bindsym Right resize grow width 10 px or 10 ppt

		# back to normal: Enter or Escape or $mod+r
		bindsym Return mode "default"
		bindsym Escape mode "default"
		bindsym $mod+r mode "default"
	}

	bindsym $mod+r mode "resize"

	# Start i3bar to display a workspace bar (plus the system information i3status
	# finds out, if available)
	bar {
		status_command i3status
	}

	gaps inner 6
	gaps outer 6

	default_border pixel 3

	exec --no-startup-id autotiling

	exec --no-startup-id feh --bg-fill /etc/bg.jpg

	for_window [class="VirtualBox Machine"] floating enable
	for_window [class="VirtualBoxVM"] floating enable
	exec --no-startup-id /usr/lib/polkit-kde-authentication-agent-1
	exec nm-applet
	'';};

  services.xserver.displayManager.sddm.enable = true;
  services.xserver.windowManager.i3.enable = true;
  services.xserver.windowManager.i3.package = pkgs.i3-gaps;
  services.xserver.windowManager.i3.configFile = "/etc/i3-config";
  environment.etc."bg.jpg" = {
  	source = jack-info.wallpaper;
	};

  
  

  # Configure keymap in X11
  # services.xserver.layout = "us";
  # services.xserver.xkbOptions = "eurosign:e";

  # Enable CUPS to print documents.
  # services.printing.enable = true;

  # Enable sound.
   sound.enable = true;
   hardware.pulseaudio.enable = true;

  # Enable touchpad support (enabled default in most desktopManager).
  # services.xserver.libinput.enable = true;

  # Define a user account. Don't forget to set a password with ‘passwd’.
  users.users.jack = {
     isNormalUser = true;
     extraGroups = [ "wheel" ]; # Enable ‘sudo’ for the user.
     shell = pkgs.zsh;
  };
  programs.zsh = {
	enable = true;
	syntaxHighlighting.enable = true;
	histSize = 10000;
	autosuggestions.enable = true;
	promptInit = ''
	autoload -U colors && colors
	PS1="%F{red}[%n@%f%F{blue}%M %~]%f %F{grey}%f"
	autoload -U compinit
	zstyle ':completion:*' menu select
	zmodload zsh/complist
	compinit
	_comp_options+=(globdots)
	'';
	interactiveShellInit = ''
	# Disable config prompt
	if [[ -f ~/.zshrc ]]; then
	
	else
		touch ~/.zshrc
	fi
 	setopt autocd
	#Exports
	export 	VISUAL=nvim;
	export EDITOR=nvim;
	# Jack Functions
	function jack-hsearch() {
		history | cut -d" " -f6- | tac |fzf | xargs zsh -c
	}
	zle -N jack-hsearch
	bindkey "^[[F" jack-hsearch
	bindkey -v 
	export KEYTIMEOUT=1
	setopt INC_APPEND_HISTORY_TIME
	zstyle ":completion:*:commands" rehash 1
	'';};
	
	

	
	
  # List packages installed in system profile. To search, run:
  # $ nix search wget
  environment.systemPackages = with pkgs; [j
     vim # Do not forget to add an editor to edit configuration.nix! The Nano editor is also installed by default.
     wget
     firefox
     fzf
     nitrogen
     dmenu
     alacritty
     xdotool
     neovim
     home-manager
     feh
     networkmanager
     networkmanagerapplet
     git
     gh
   ];
   fonts.fonts = with pkgs; [
   	cascadia-code
   ];

  # Some programs need SUID wrappers, can be configured further or are
  # started in user sessions.
  # programs.mtr.enable = true;
  # programs.gnupg.agent = {
  #   enable = true;
  #   enableSSHSupport = true;
  # };

  # List services that you want to enable:

  # Enable the OpenSSH daemon.
  # services.openssh.enable = true;

  # Open ports in the firewall.
  # networking.firewall.allowedTCPPorts = [ ... ];
  # networking.firewall.allowedUDPPorts = [ ... ];
  # Or disable the firewall altogether.
  # networking.firewall.enable = false;

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. It‘s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  system.stateVersion = "21.11"; # Did you read the comment?

}

